---
apiVersion: v1
kind: Namespace
metadata:
  name: bookinfo
  labels:
    name: bookinfo
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: productpage
  namespace: bookinfo
spec:
  host: productpage
  subsets:
    - name: v1
      labels:
        version: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: reviews
  namespace: bookinfo
spec:
  host: reviews
  subsets:
    - name: v1
      labels:
        version: v1
    - name: v2
      labels:
        version: v2
    - name: v3
      labels:
        version: v3
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: ratings
  namespace: bookinfo
spec:
  host: ratings
  subsets:
    - name: v1
      labels:
        version: v1
    - name: v2
      labels:
        version: v2
    - name: v2-mysql
      labels:
        version: v2-mysql
    - name: v2-mysql-vm
      labels:
        version: v2-mysql-vm
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: details
  namespace: bookinfo
spec:
  host: details
  subsets:
    - name: v1
      labels:
        version: v1
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: details-v2
  namespace: bookinfo
  labels:
    app: details
    version: v2
spec:
  replicas: 1
  selector:
    app: details
    version: v2
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - details
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-details-v2:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: details
        version: v2
    spec:
      containers:
        - name: details
          image: examples-bookinfo-details-v2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          env:
            - name: DO_NOT_ENCRYPT
              value: "true"
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-details-v2
  labels:
    app: details
    version: v2
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-details-v2:2.1.0
---
##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  namespace: bookinfo
  labels:
    app: details
    service: details
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  namespace: bookinfo
  labels:
    account: details
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: details-v1
  namespace: bookinfo
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selector:
    app: details
    version: v1
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - details
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-details-v1:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: details
        version: v1
    spec:
      serviceAccountName: bookinfo-details
      containers:
        - name: details
          image: examples-bookinfo-details-v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-details-v1
  labels:
    app: details
    version: v1
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-details-v1:2.1.0
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: bookinfo
  labels:
    app: ratings
    service: ratings
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  namespace: bookinfo
  labels:
    account: ratings
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: ratings-v1
  namespace: bookinfo
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selector:
    app: ratings
    version: v1
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ratings
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-ratings-v1:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: ratings
        version: v1
    spec:
      serviceAccountName: bookinfo-ratings
      containers:
        - name: ratings
          image: examples-bookinfo-ratings-v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-ratings-v1
  labels:
    app: ratings
    version: v1
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-ratings-v1:2.1.0
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: ratings-v2-mysql-vm
  labels:
    app: ratings
    version: v2
    type: mysql-vm
spec:
  replicas: 1
  selector:
    app: ratings
    version: v2
    type: mysql-vm
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ratings
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-ratings-v2:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: ratings
        version: v2
        type: mysql-vm
    spec:
      containers:
        - name: ratings
          image: examples-bookinfo-ratings-v2
          imagePullPolicy: IfNotPresent
          env:
            # This assumes you registered your mysql vm as
            # istioctl register -n vm mysqldb 1.2.3.4 3306
            - name: DB_TYPE
              value: "mysql"
            - name: MYSQL_DB_HOST
              value: mysqldb.vm.svc.cluster.local
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_USER
              value: root
            - name: MYSQL_DB_PASSWORD
              value: password
          ports:
            - containerPort: 9080
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: ratings-v2-mysql
  labels:
    app: ratings
    version: v2
    type: mysql
spec:
  replicas: 1
  selector:
    app: ratings
    version: v2
    type: mysql
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ratings
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-ratings-v2:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: ratings
        version: v2
        type: mysql
    spec:
      containers:
        - name: ratings
          image: examples-bookinfo-ratings-v2
          imagePullPolicy: IfNotPresent
          env:
            # ratings-v2 will use mongodb as the default db backend.
            # if you would like to use mysqldb then you can use this file
            # which sets DB_TYPE = 'mysql' and the rest of the parameters shown
            # here and also create the # mysqldb service using bookinfo-mysql.yaml
            # NOTE: This file is mutually exclusive to bookinfo-ratings-v2.yaml
            - name: DB_TYPE
              value: "mysql"
            - name: MYSQL_DB_HOST
              value: mysqldb
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_USER
              value: root
            - name: MYSQL_DB_PASSWORD
              value: password
          ports:
            - containerPort: 9080
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings-v2
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: ratings-v2
  labels:
    app: ratings
    version: v2
spec:
  replicas: 1
  selector:
    app: ratings
    version: v2
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ratings
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-ratings-v2:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: ratings
        version: v2
    spec:
      serviceAccountName: bookinfo-ratings-v2
      containers:
        - name: ratings
          image: examples-bookinfo-ratings-v2
          imagePullPolicy: IfNotPresent
          env:
            # ratings-v2 will use mongodb as the default db backend.
            # if you would like to use mysqldb then set DB_TYPE = 'mysql', set
            # the rest of the parameters shown here and also create the
            # mysqldb service using bookinfo-mysql.yaml
            # - name: DB_TYPE #default to
            #   value: "mysql"
            # - name: MYSQL_DB_HOST
            #   value: mysqldb
            # - name: MYSQL_DB_PORT
            #   value: "3306"
            # - name: MYSQL_DB_USER
            #   value: root
            # - name: MYSQL_DB_PASSWORD
            #  value: password
            - name: MONGO_DB_URL
              value: mongodb://mongodb:27017/test
          ports:
            - containerPort: 9080
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-ratings-v2
  labels:
    app: ratings
    version: v2
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-ratings-v2:2.1.0
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: bookinfo
  labels:
    app: reviews
    service: reviews
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  namespace: bookinfo
  labels:
    account: reviews
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: reviews-v1
  namespace: bookinfo
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    app: reviews
    version: v1
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - reviews
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-reviews-v1:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: reviews
        version: v1
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: examples-bookinfo-reviews-v1
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-reviews-v1
  labels:
    app: reviews
    version: v1
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-reviews-v1:2.1.0
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: reviews-v2
  namespace: bookinfo
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    app: reviews
    version: v2
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - reviews
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-reviews-v2:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: reviews
        version: v2
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: quay.io/maistra/examples-bookinfo-reviews-v2
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-reviews-v2
  labels:
    app: reviews
    version: v2
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-reviews-v2:2.1.0
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: reviews-v3
  namespace: bookinfo
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    app: reviews
    version: v3
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - reviews
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-reviews-v3:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: reviews
        version: v3
    spec:
      serviceAccountName: bookinfo-reviews
      containers:
        - name: reviews
          image: examples-bookinfo-reviews-v3
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-reviews-v3
  labels:
    app: reviews
    version: v3
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-reviews-v3:2.1.0
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: bookinfo
  labels:
    app: productpage
    service: productpage
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  namespace: bookinfo
  labels:
    account: productpage
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: productpage-v1
  namespace: bookinfo
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    app: productpage
    version: v1
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - productpage
        from:
          kind: ImageStreamTag
          name: examples-bookinfo-productpage-v1:2.1.0
      type: ImageChange
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      containers:
        - name: productpage
          image: examples-bookinfo-productpage-v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /productpage
              port: 9080
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: tmp
          emptyDir: {}
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: examples-bookinfo-productpage-v1
  labels:
    app: productpage
    version: v1
spec:
  lookupPolicy:
    local: false
  tags:
    - name: "2.1.0"
      from:
        kind: DockerImage
        name: quay.io/maistra/examples-bookinfo-productpage-v1:2.1.0
---
#apiVersion: networking.istio.io/v1alpha3
#kind: Gateway
#metadata:
#  name: bookinfo-gateway
#  namespace: bookinfo
#spec:
#  selector:
#    istio: ingressgateway # use istio default controller
#  servers:
#    - port:
#        number: 80
#        name: http
#        protocol: HTTP
#      hosts:
#        - "*"
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: bookinfo
#  namespace: bookinfo
#spec:
#  hosts:
#    - "*"
#  gateways:
#    - bookinfo-gateway
#  http:
#    - match:
#        - uri:
#            exact: /productpage
#        - uri:
#            prefix: /static
#        - uri:
#            exact: /login
#        - uri:
#            exact: /logout
#        - uri:
#            prefix: /api/v1/products
#      route:
#        - destination:
#            host: productpage
#            port:
#              number: 9080
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: productpage
#spec:
#  hosts:
#    - productpage
#  http:
#    - route:
#        - destination:
#            host: productpage
#            subset: v1
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: reviews
#spec:
#  hosts:
#    - reviews
#  http:
#    - route:
#        - destination:
#            host: reviews
#            subset: v1
#          weight: 0
#        - destination:
#            host: reviews
#            subset: v2
#          weight: 0
#        - destination:
#            host: reviews
#            subset: v3
#          weight: 100
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: ratings
#spec:
#  hosts:
#    - ratings
#  http:
#    - route:
#        - destination:
#            host: ratings
#            subset: v1
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: details
#spec:
#  hosts:
#    - details
#  http:
#    - route:
#        - destination:
#            host: details
#            subset: v1
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: mongodb
#  labels:
#    app: mongodb
#    service: mongodb
#spec:
#  ports:
#    - port: 27017
#      name: mongo
#  selector:
#    app: mongodb
#---
#apiVersion: v1
#kind: DeploymentConfig
#metadata:
#  name: mongodb-v1
#  labels:
#    app: mongodb
#    version: v1
#spec:
#  replicas: 1
#  selector:
#    app: mongodb
#    version: v1
#  triggers:
#    - type: ConfigChange
#    - imageChangeParams:
#        automatic: true
#        containerNames:
#          - mongodb
#        from:
#          kind: ImageStreamTag
#          name: examples-bookinfo-mongodb:latest
#      type: ImageChange
#  template:
#    metadata:
#      annotations:
#        sidecar.istio.io/inject: "true"
#      labels:
#        app: mongodb
#        version: v1
#    spec:
#      containers:
#        - name: mongodb
#          image: quay.io/maistra/examples-bookinfo-mongodb:2.1.0
#          imagePullPolicy: IfNotPresent
#          ports:
#            - containerPort: 27017
#          volumeMounts:
#            - name: data-db
#              mountPath: /data/db
#      volumes:
#        - name: data-db
#          emptyDir: {}
#  strategy:
#    resources: {}
#    rollingParams:
#      intervalSeconds: 1
#      maxSurge: 25%
#      maxUnavailable: 25%
#      timeoutSeconds: 600
#      updatePeriodSeconds: 1
#    type: Rolling
#---
#apiVersion: v1
#kind: ImageStream
#metadata:
#  labels:
#    app: mongodb
#    version: v1
#  name: examples-bookinfo-mongodb
#spec: {}
#---
#apiVersion: security.istio.io/v1beta1
#kind: PeerAuthentication
#metadata:
#  name: "default"
#  namespace: bookinfo
#spec:
#  mtls:
#    mode: STRICT
#---